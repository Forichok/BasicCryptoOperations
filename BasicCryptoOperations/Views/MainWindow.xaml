<Window x:Class="BasicCryptoOperations.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BasicCryptoOperations"
        xmlns:viewModels="clr-namespace:BasicCryptoOperations.ViewModels"
        xmlns:validation="clr-namespace:BasicCryptoOperations.Validation"
        xmlns:behaviors="clr-namespace:BasicCryptoOperations.Behaviors"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Window.DataContext>
        <viewModels:MainViewModel/>
    </Window.DataContext>

    <Grid>
        <Grid>
            <TabControl>
                <TabItem Header="Part 1" DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Part1ViewModel}">
                    <UniformGrid Columns="3">

                        <UniformGrid Rows="4">

                            <WrapPanel>
                                <Label Content="Number: "></Label>
                                <TextBox Width="200"  MaxLength="32" >
                                    <TextBox.Text>
                                        <Binding Path="Number" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:BinaryValidationRule/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                            </WrapPanel>

                            <WrapPanel>
                                <TextBox MinWidth="50">
                                    <TextBox.Text>
                                        <Binding Path="BitPosition" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:BitPositionValidation/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Label Content="bit = "></Label>
                                <Label Content="{Binding BitValue}"></Label>
                                <Button Height="25" Margin="20,0" Content="Inverse" Command="{Binding InverseBitCommand}"></Button>
                            </WrapPanel>

                            <WrapPanel>
                                <TextBox MinWidth="30">
                                    <TextBox.Text>
                                        <Binding Path="BitI" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:BitPositionValidation/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Label Content="Change with " Margin="10,0"></Label>
                                <TextBox MinWidth="30">
                                    <TextBox.Text>
                                        <Binding Path="BitJ" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:BitPositionValidation  ValidationStep="RawProposedValue"/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Button Margin="10,0" Content="Change" Command="{Binding ChangeBitsCommand}"></Button>
                            </WrapPanel>

                            <WrapPanel>
                                <Label Content="Count bits to reset"></Label>
                                <TextBox MinWidth="20">
                                    <TextBox.Text>
                                        <Binding Path="BitsToReset" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:BitPositionValidation/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Button Content="Reset" Margin="30,0" Command="{Binding ResetBitsCommand}"></Button>
                            </WrapPanel>
                        </UniformGrid>

                        <UniformGrid Rows="4">
                            <StackPanel>
                                <WrapPanel>
                                    <Label Content="Concatinate "></Label>
                                    <TextBox MinWidth="30">
                                        <TextBox.Text>
                                            <Binding Path="BitsToConcatinate" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validation:BitPositionValidation/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <Label Content="bits"></Label>
                                    <Button Margin="10,0" Content="Concatinate" Command="{Binding ConcatinateBitsCommand}" ToolTip="Concatinate first n and last n bits"></Button>
                                </WrapPanel>
                                <WrapPanel>
                                    <Label Content="Сoncatinated bits"></Label>
                                    <Label Content="{Binding ConcatinatedBits}"></Label>
                                </WrapPanel>
                            </StackPanel>

                            <StackPanel>
                                <WrapPanel>
                                    <Label Content="Get from the middle "></Label>
                                    <TextBox MinWidth="30">
                                        <TextBox.Text>
                                            <Binding Path="BitsToExtractFromMiddle" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validation:BitPositionValidation/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <Label Content="bits"></Label>
                                    <Button Margin="10,0" Content="Get" Command="{Binding GetBitsFromMiddleCommand}" ToolTip="Concatinate first n and last n bits"></Button>
                                </WrapPanel>
                                <WrapPanel>
                                    <Label Content="Result bits"></Label>
                                    <Label Content="{Binding BitsFromMiddle}"></Label>
                                </WrapPanel>
                            </StackPanel>
                        </UniformGrid>

                        <UniformGrid Rows="3">
                            <StackPanel>
                                <WrapPanel>
                                    <TextBox MinWidth="30">
                                        <TextBox.Text>
                                            <Binding Path="ByteI" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validation:ByteSwapValidation/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <Label Content="Change byte with " Margin="10,0"></Label>
                                    <TextBox MinWidth="30">
                                        <TextBox.Text>
                                            <Binding Path="ByteJ" UpdateSourceTrigger="PropertyChanged">
                                                <Binding.ValidationRules>
                                                    <validation:ByteSwapValidation/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <Button Margin="10,0" Content="Swap" Command="{Binding SwapBytesCommand}"></Button>
                                </WrapPanel>
                                <WrapPanel>
                                    <Label Content="Result bits"></Label>
                                    <Label Content="{Binding SwapedBits}"></Label>
                                </WrapPanel>
                            </StackPanel>
                        </UniformGrid>

                    </UniformGrid>

                </TabItem>

                <TabItem Header="Part 2" DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Part2ViewModel}">
                    <UniformGrid>
                        <StackPanel>
                            <WrapPanel>
                                <Label Content="Max 2^p divider of "></Label>
                                <TextBox MinWidth="50">
                                    <TextBox.Text>
                                        <Binding Path="Number" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:NumberValidation/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>

                                <Label Content="p = "></Label>
                                <TextBlock Text="{Binding MaxDivider}"></TextBlock>
                            </WrapPanel>

                            <WrapPanel>

                            </WrapPanel>
                            <TextBlock Text="{Binding Limits}"></TextBlock>


                            <WrapPanel>
                                <Label Content="Binary num: "></Label>
                                <TextBox MinWidth="50" Text="{Binding BinaryNum, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </WrapPanel>
                            <WrapPanel>
                                <Label Content=" Self Xored = "></Label>
                                <TextBlock Text="{Binding SelfXored}"></TextBlock>
                            </WrapPanel>
                            <WrapPanel>
                                <Slider Name="Slider" Maximum="20" Minimum="0" MinWidth="200" Value="{Binding ShiftIndex}"/>
                                <TextBox Margin="20,0" Text="{Binding ElementName=Slider,Path=Value,UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </WrapPanel>
                            <WrapPanel>
                                <Label Content="Left: "></Label>
                                <TextBox Text="{Binding LeftShift}"></TextBox>
                                <Label Content="   Right: "></Label>
                                <TextBox Text="{Binding RightShift}"></TextBox>
                            </WrapPanel>

                            <WrapPanel>
                                <Label Content="Swap rules: "></Label>
                                <TextBox MinWidth="50" Text="{Binding SwapRules, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                            </WrapPanel>
                            <WrapPanel>
                                <Label Content="Swapped: "></Label>
                                <TextBlock Text="{Binding SwappedNumber}"></TextBlock>
                            </WrapPanel>
                        </StackPanel>

                    </UniformGrid>
                </TabItem>

                <TabItem Header="Part 3" DataContext="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.Part3ViewModel}">
                    <UniformGrid Columns="4">

                        <StackPanel>
                            <Label Content="9" HorizontalAlignment="Center"></Label>
                            <Button Margin="10" IsEnabled="{Binding IsReady}" Content="MyDecrypt" Command="{Binding DecryptCommand}"></Button>
                            <Button Margin="10" IsEnabled="{Binding IsReady}" Content="MyEncrypt" Command="{Binding EncryptCommand}"></Button>
                        </StackPanel>

                        <StackPanel>
                            <Label Content="10" HorizontalAlignment="Center"></Label>
                            <WrapPanel>
                                <Label Content="Key"></Label>
                                <TextBox Text="{Binding VermanKey}" MinWidth="100"></TextBox>
                            </WrapPanel>
                            <Button Margin="10" IsEnabled="{Binding IsReady}" Content="Start Verman" Command="{Binding StartVermanCommand}"></Button>

                        </StackPanel>

                        <StackPanel>
                            <Label Content="9" HorizontalAlignment="Center"></Label>
                            <WrapPanel>
                                <Label Content="Key"></Label>
                                <TextBox Text="{Binding DESKey}" MinWidth="100"></TextBox>
                            </WrapPanel>
                            <Button Margin="10" IsEnabled="{Binding IsReady}" Content="DesDecrypt" Command="{Binding DecryptDESCommand}"></Button>
                            <Button Margin="10" IsEnabled="{Binding IsReady}" Content="DesEncrypt" Command="{Binding EncryptDESCommand}"></Button>

                            <RadioButton Content="ECB" IsChecked="{Binding ECB}"></RadioButton>
                            <RadioButton Content="CFB" IsChecked="{Binding CFB}"></RadioButton>
                            <RadioButton Content="OFB" IsChecked="{Binding OFB}"></RadioButton>
                            <RadioButton Content="CBC" IsChecked="{Binding CBC}"></RadioButton>

                        </StackPanel>

                        <StackPanel>
                            <Label Content="12" HorizontalAlignment="Center"></Label>
                            <WrapPanel>
                                <Label Content="Key"></Label>
                                <TextBox MinWidth="100" Text="{Binding RC4Key}"></TextBox>
                            </WrapPanel>
                            <Button Margin="10" IsEnabled="{Binding IsReady}" Content="Start RC$" Command="{Binding StartRC4Command}"></Button>

                        </StackPanel>
                    </UniformGrid>
                </TabItem>

            </TabControl>
        </Grid>

    </Grid>
</Window>
